apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.squareup.sqldelight'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.bugsnag.android.gradle'

bugsnag {
    apiKey 'ae8bfd2d89cb087b9c80367ca78f5c30'
    autoProguardConfig false
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.1'

    defaultConfig {
        applicationId 'in.eightbitlabs.gocollege'
        minSdkVersion 16
        targetSdkVersion 24
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1000
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.0'
    }

    compileOptions {
        incremental true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'gocollege'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
            ext.enableBugsnag = false
        }

        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            useProguard true
            FileCollection proGuardFileCollection = files { file('./proguard').listFiles() }
            proguardFiles(proGuardFileCollection)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
}

play {
    jsonFile = file('../play-service-account-key.json')
    uploadImages = true
    // By default publishes to Alpha channel
    track = 'beta'
}

dependencies {
    final PLAY_SERVICES_VERSION = '9.2.1'
    final SUPPORT_LIBRARY_VERSION = '24.1.1'
    final RETROFIT_VERSION = '2.1.0'
    final DAGGER_VERSION = '2.5'
    final DEXMAKER_VERSION = '1.4'
    final HAMCREST_VERSION = '1.3'
    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'
    final BUTTERKNIFE_VERSION = '8.1.0'
    final AUTO_VALUE_VERSION = '1.2'

    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:1.10.19"

    // App Dependencies
    compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

    compile 'com.squareup.sqlbrite:sqlbrite:0.5.0'
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'

    compile 'com.jakewharton.timber:timber:4.1.3-SNAPSHOT'
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    apt     "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    apt      "com.google.auto.value:auto-value:$AUTO_VALUE_VERSION"
    compile      "com.google.auto.value:auto-value:$AUTO_VALUE_VERSION"
    apt     'com.ryanharter.auto.value:auto-value-gson:0.3.1'
    apt     'com.ryanharter.auto.value:auto-value-parcel:0.2.2'
    compile 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.2'

    //noinspection GradleDynamicVersion
    compile 'com.bugsnag:bugsnag-android:3.+'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile  "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'javax.annotation:jsr250-api:1.0'
    apt daggerCompiler
    testApt daggerCompiler
    androidTestApt daggerCompiler

    compile 'com.facebook.android:facebook-android-sdk:4.+'

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testCompile 'org.robolectric:robolectric:3.1'
}

// Log out test results to console
tasks.matching {it instanceof Test}.all {
    testLogging.events = ["failed", "passed", "skipped"]
}


